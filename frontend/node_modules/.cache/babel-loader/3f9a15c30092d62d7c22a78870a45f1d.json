{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { getAllPizzaReducer, addPizzaReducer, getPizzaByIdReducer, updatePizzaByIdReducer } from \"./reducers/pizzaReducer\";\nimport { cartReducer } from \"./reducers/cartReducer\";\nimport { registerUserReducer, loginUserReducer, getAllUsersReducer } from \"./reducers/userReducer\";\nimport { placeOrderReducer, getUserOrdersReducer, allUserOrdersReducer } from \"./reducers/orderReducer\";\nconst cartItems = localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : [];\nconst currentUser = localStorage.getItem(\"currentUser\") ? JSON.parse(localStorage.getItem(\"currentUser\")) : null;\nconst rootReducer = combineReducers({\n  getAllPizzaReducer: getAllPizzaReducer,\n  cartReducer: cartReducer,\n  registerUserReducer: registerUserReducer,\n  loginUserReducer: loginUserReducer,\n  placeOrderReducer: placeOrderReducer,\n  getUserOrdersReducer: getUserOrdersReducer,\n  addPizzaReducer: addPizzaReducer,\n  getPizzaByIdReducer: getPizzaByIdReducer,\n  updatePizzaByIdReducer: updatePizzaByIdReducer,\n  allUserOrdersReducer: allUserOrdersReducer,\n  getAllUsersReducer: getAllUsersReducer\n});\nconst initialState = {\n  cartReducer: {\n    cartItems: cartItems\n  },\n  loginUserReducer: {\n    currentUser: currentUser\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["C:/Users/sidhu/Downloads/pizza-shop-mern-stack-app-cmplete-code-main/pizza-shop-mern-stack-app-cmplete-code-main/client/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","getAllPizzaReducer","addPizzaReducer","getPizzaByIdReducer","updatePizzaByIdReducer","cartReducer","registerUserReducer","loginUserReducer","getAllUsersReducer","placeOrderReducer","getUserOrdersReducer","allUserOrdersReducer","cartItems","localStorage","getItem","JSON","parse","currentUser","rootReducer","initialState","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,kBAAT,EAA4BC,eAA5B,EAA4CC,mBAA5C,EAAgEC,sBAAhE,QAA8F,yBAA9F;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,mBAAT,EAA8BC,gBAA9B,EAA+CC,kBAA/C,QAAyE,wBAAzE;AACA,SAASC,iBAAT,EAA4BC,oBAA5B,EAAkDC,oBAAlD,QAA8E,yBAA9E;AAGA,MAAMC,SAAS,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACdC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADc,GAEd,EAFJ;AAIA,MAAMG,WAAW,GAAGJ,YAAY,CAACC,OAAb,CAAqB,aAArB,IAChBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CADgB,GAEhB,IAFJ;AAGA,MAAMI,WAAW,GAAGrB,eAAe,CAAC;AAClCI,EAAAA,kBAAkB,EAAEA,kBADc;AAElCI,EAAAA,WAAW,EAAEA,WAFqB;AAGlCC,EAAAA,mBAAmB,EAAEA,mBAHa;AAIlCC,EAAAA,gBAAgB,EAAEA,gBAJgB;AAKlCE,EAAAA,iBAAiB,EAAEA,iBALe;AAMlCC,EAAAA,oBAAoB,EAAEA,oBANY;AAOlCR,EAAAA,eAAe,EAAEA,eAPiB;AAQlCC,EAAAA,mBAAmB,EAAEA,mBARa;AASlCC,EAAAA,sBAAsB,EAAEA,sBATU;AAUlCO,EAAAA,oBAAoB,EAAEA,oBAVY;AAWlCH,EAAAA,kBAAkB,EAAEA;AAXc,CAAD,CAAnC;AAcA,MAAMW,YAAY,GAAG;AACnBd,EAAAA,WAAW,EAAE;AACbO,IAAAA,SAAS,EAAEA;AADE,GADM;AAGnBL,EAAAA,gBAAgB,EAAE;AAChBU,IAAAA,WAAW,EAAEA;AADG;AAHC,CAArB;AAOA,MAAMG,UAAU,GAAG,CAACrB,KAAD,CAAnB;AAEA,MAAMsB,KAAK,GAAGzB,WAAW,CAAEsB,WAAF,EAAeC,YAAf,EAA8BnB,mBAAmB,CAACF,eAAe,CAAC,GAAGsB,UAAJ,CAAhB,CAAjD,CAAzB;AAEA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { getAllPizzaReducer,addPizzaReducer,getPizzaByIdReducer,updatePizzaByIdReducer,} from \"./reducers/pizzaReducer\";\nimport { cartReducer } from \"./reducers/cartReducer\";\nimport { registerUserReducer, loginUserReducer,getAllUsersReducer,} from \"./reducers/userReducer\";\nimport { placeOrderReducer, getUserOrdersReducer, allUserOrdersReducer,} from \"./reducers/orderReducer\";\n\n\nconst cartItems = localStorage.getItem(\"cartItems\")\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\n  : [];\n\nconst currentUser = localStorage.getItem(\"currentUser\")\n  ? JSON.parse(localStorage.getItem(\"currentUser\"))\n  : null;\nconst rootReducer = combineReducers({\n  getAllPizzaReducer: getAllPizzaReducer,\n  cartReducer: cartReducer,\n  registerUserReducer: registerUserReducer,\n  loginUserReducer: loginUserReducer,\n  placeOrderReducer: placeOrderReducer,\n  getUserOrdersReducer: getUserOrdersReducer,\n  addPizzaReducer: addPizzaReducer,\n  getPizzaByIdReducer: getPizzaByIdReducer,\n  updatePizzaByIdReducer: updatePizzaByIdReducer,\n  allUserOrdersReducer: allUserOrdersReducer,\n  getAllUsersReducer: getAllUsersReducer,\n});\n\nconst initialState = {\n  cartReducer: {\n  cartItems: cartItems},\n  loginUserReducer: {\n    currentUser: currentUser\n  },\n};\nconst middleware = [thunk];\n\nconst store = createStore( rootReducer, initialState,  composeWithDevTools(applyMiddleware(...middleware)));\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}