{"ast":null,"code":"import axios from \"axios\";\nexport const placeOrder = (token, subTotal) => async (dispatch, getState) => {\n  dispatch({\n    type: \"PLACE_ORDER_REQUEST\"\n  });\n  const currentUser = getState().loginUserReducer.currentUser;\n  const cartItems = getState().cartReducer.cartItems;\n\n  try {\n    await axios.post(\"/api/orders/placeorder\", {\n      token,\n      subTotal,\n      currentUser,\n      cartItems\n    });\n    dispatch({\n      type: \"PLACE_ORDER_SUCCESS\"\n    }); // console.log(res);\n  } catch (error) {\n    dispatch({\n      type: \"PLACE_ORDER_FAIL\"\n    });\n    console.log(error);\n  }\n};\nexport const getUserOrders = () => async (dispatch, getState) => {\n  const currentUser = getState().loginUserReducer.currentUser;\n  dispatch({\n    type: \"USER_ORDER_REQUEST\"\n  });\n\n  try {\n    const response = await axios.post(\"/api/orders/getuserorder\", {\n      userid: currentUser._id\n    }); // console.log(response);\n\n    dispatch({\n      type: \"USER_ORDER_SUCCESS\",\n      payload: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: \"USER_ORDER_FAIL\",\n      payload: error\n    });\n  }\n};\nexport const getAllOrders = () => async (dispatch, getState) => {\n  // const currentUser = getState().loginUserReducer.currentUser;\n  dispatch({\n    type: \"ALL_ORDER_REQUEST\"\n  });\n\n  try {\n    const response = await axios.get(\"/api/orders/alluserorder\");\n    dispatch({\n      type: \"ALL_ORDER_SUCCESS\",\n      payload: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: \"ALL_ORDER_FAIL\",\n      payload: error\n    });\n  }\n};\nexport const deliverOrder = orderid => async (dispatch, getState) => {\n  // const currentUser = getState().loginUserReducer.currentUser;\n  dispatch({\n    type: \"GET_ALL_ORDER_REQUEST\"\n  });\n\n  try {\n    await axios.post(\"/api/orders/deliverorder\", {\n      orderid\n    });\n    alert(\"Deliverd Success\");\n    const orders = await axios.get(\"/api/orders/alluserorder\");\n    dispatch({\n      type: \"GET_ALL_ORDER_SUCCESS\",\n      payload: orders.data\n    });\n    window.location.href = \"/admin/orderlist\";\n  } catch (error) {\n    dispatch({\n      type: \"GET_ALL_ORDER_FAIL\",\n      payload: error\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/sidhu/Downloads/pizza-shop-mern-stack-app-cmplete-code-main/pizza-shop-mern-stack-app-cmplete-code-main/client/src/actions/orderAction.js"],"names":["axios","placeOrder","token","subTotal","dispatch","getState","type","currentUser","loginUserReducer","cartItems","cartReducer","post","error","console","log","getUserOrders","response","userid","_id","payload","data","getAllOrders","get","deliverOrder","orderid","alert","orders","window","location","href"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\nexport const placeOrder = (token, subTotal) => async (dispatch, getState) => {\n  dispatch({ type: \"PLACE_ORDER_REQUEST\" });\n  const currentUser = getState().loginUserReducer.currentUser;\n  const cartItems = getState().cartReducer.cartItems;\n  try {\n    await axios.post(\"/api/orders/placeorder\", {\n      token,\n      subTotal,\n      currentUser,\n      cartItems,\n    });\n    dispatch({ type: \"PLACE_ORDER_SUCCESS\" });\n    // console.log(res);\n  } catch (error) {\n    dispatch({ type: \"PLACE_ORDER_FAIL\" });\n    console.log(error);\n  }\n};\n\nexport const getUserOrders = () => async (dispatch, getState) => {\n  const currentUser = getState().loginUserReducer.currentUser;\n  dispatch({\n    type: \"USER_ORDER_REQUEST\",\n  });\n  try {\n    const response = await axios.post(\"/api/orders/getuserorder\", {\n      userid: currentUser._id,\n    });\n    // console.log(response);\n    dispatch({ type: \"USER_ORDER_SUCCESS\", payload: response.data });\n  } catch (error) {\n    dispatch({ type: \"USER_ORDER_FAIL\", payload: error });\n  }\n};\nexport const getAllOrders = () => async (dispatch, getState) => {\n  // const currentUser = getState().loginUserReducer.currentUser;\n  dispatch({\n    type: \"ALL_ORDER_REQUEST\",\n  });\n  try {\n    const response = await axios.get(\"/api/orders/alluserorder\");\n    dispatch({ type: \"ALL_ORDER_SUCCESS\", payload: response.data });\n  } catch (error) {\n    dispatch({ type: \"ALL_ORDER_FAIL\", payload: error });\n  }\n};\n\nexport const deliverOrder = (orderid) => async (dispatch, getState) => {\n  // const currentUser = getState().loginUserReducer.currentUser;\n  dispatch({\n    type: \"GET_ALL_ORDER_REQUEST\",\n  });\n  try {\n    await axios.post(\"/api/orders/deliverorder\", { orderid });\n    alert(\"Deliverd Success\");\n    const orders = await axios.get(\"/api/orders/alluserorder\");\n    dispatch({ type: \"GET_ALL_ORDER_SUCCESS\", payload: orders.data });\n    window.location.href = \"/admin/orderlist\";\n  } catch (error) {\n    dispatch({ type: \"GET_ALL_ORDER_FAIL\", payload: error });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}